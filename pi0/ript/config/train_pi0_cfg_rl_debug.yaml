# RIPT 训练配置 (PI0 + Classifier Free Guidance + RL)
# 调试版本 - 较小的批次大小和更少的迭代次数，增强错误处理

# 实验名称
exp_name: "pi0_ript_debug"

# 预训练模型路径 (使用路径变量)
policy_path: "{pi0_model_path}"

# 输出目录 (使用路径变量)
output_dir: "{output_dir}/pi0_ript_debug"

# 任务配置
task:
  benchmark_name: "libero_spatial"  # 使用LIBERO中的空间导航任务，这些任务相对简单
  max_episode_length: 50            # 更小的步数限制，减少内存使用
  num_parallel_envs: 1              # 调试时只使用1个并行环境
  use_test: false                   # 不使用测试集
  local_tasks: []                   # 留空表示使用所有任务
  
# 训练算法配置
algo:
  # 强化学习批次配置
  lr: 1.0e-4                        # 降低学习率，提高稳定性
  rloo_batch_size: 2                # 进一步减小批次大小
  data_batch_size: 1                # 最小的训练批次大小
  gradient_accumulation_steps: 4    # 增加梯度累积步数补偿小批次
  
  # 训练优化配置
  num_epochs: 1                     # 减少epoch数，加快调试
  grad_norm_clip: 0.5               # 更严格的梯度裁剪
  
  # 其他配置
  enable_dynamic_sampling: false    # 禁用动态采样
  enable_rollout_stats_tracking: true  # 启用轨迹统计跟踪
  rollout_skip_threshold: 5         # 增加跳过阈值，提高鲁棒性
  use_val_init: false               # 不使用验证集初始化

# 优化器配置
optimizer:
  name: "AdamW"                     # 优化器类型
  lr: 1.0e-5                        # 更小的学习率
  weight_decay: 0.01                # 添加权重衰减提高稳定性
  lr_schedule: "constant"           # 固定学习率

# 分布式训练配置
distributed:
  gradient_checkpointing: true      # 启用梯度检查点以节省内存
  zero_optimization: false          # 不启用零优化
  use_fsdp: false                   # 不使用FSDP
  mixed_precision: false            # 禁用混合精度以提高稳定性
  fp16: false                       # 禁用FP16
  bf16: false                       # 禁用BF16

# 训练配置
training:
  seed: 42                           # 随机种子
  num_train_steps: 100              # 减少训练步数用于调试
  save_freq: 10                     # 更频繁的保存
  use_mixed_precision: false        # 禁用混合精度

# 日志配置
logging:
  use_wandb: false                  # 调试时禁用wandb
  wandb_project: "pi0_ript"
  wandb_entity: ""                  # 填写您的wandb实体名
  wandb_mode: "disabled"            # 禁用wandb
  log_interval: 1                   # 每次迭代都记录日志
  log_gradients: false              # 禁用梯度日志以节省内存

# 检查点配置
checkpoint:
  save_interval: 5                   # 每5个迭代保存一次检查点
  keep_num: 3                        # 保留最近的3个检查点
  save_best: true                    # 保存最佳模型